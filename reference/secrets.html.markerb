---
title: Secrets and Fly Apps
layout: docs
sitemap: false
nav: firecracker
---

Secrets allow sensitive values, such as credentials, to be passed securely to your Fly App. The secret is encrypted and stored in a vault. An app's secrets are available as environment variables on every Machine belonging to that Fly App, whether the Machine is part of Fly Launch (deployed with `fly  deploy`) or not.

Specify secrets for your Fly App using the `fly secrets` command.

## Architecture

Secrets are stored in an encrypted vault. When you set a secret through flyctl, it sends the secret value through our API, which writes to the vault for your specific Fly App. The API servers can only encrypt; they cannot decrypt secret values. Secret values are never logged.

When we launch a Machine for your app, we issue a temporary auth token to the host it runs on. The Fly.io agent on the host uses this token to decrypt your app secrets and inject them into your Machine as environment variables at boot time. When you destroy your Machines, the host environment no longer has access to your app secrets.

<section class="warning icon">
**Warning:** `flyctl` and our API servers are designed to prevent user secrets from being extracted. However, secrets are available to your application code as environment variables. People with deploy access _can_ deploy code that reads secret values and prints them to logs, or writes them to unencrypted data stores.
</section>

## Set secrets

The `fly secrets set` command sets one or more app secrets, then updates each Machine belonging to that Fly App. This involves a restart of the Machine and a consequent reset of its ephemeral file system.

The following example sets a secret that's available as the `DATABASE_URL` environment variable within your application processes:

<%= partial "docs/partials/set_secrets" %>

To set, or update, a secret in the app's vault, but defer updating the Machines to later, use the `--stage` option. For example:

```cmd
fly secrets set DATABASE_URL=postgres://example.com/mydb --stage
```

In the preceding example, the staged secret will be available only on Machines that are started or updated after the `fly secrets set` command was run.

<section class="note icon">
**Note:** You can update a machine by triggering a new release with `fly deploy`. Alternatively, the `fly secrets deploy` command will redeploy the current release with the staged secrets. This is helpful if you want to skip rebuilding the image from source code.</section>

The `secrets` command can also take secrets from STDIN. As an example:

```cmd
fly secrets set FROM_A_FILE=- < file.txt
```

Please note the `-` means "STDIN until EOF", a pipe or redirection sets the source and the hyphen instructs where to place it.

```cmd
echo "long text..." | fly secrets set LONG_TEXT=-
fly secrets set FROM_A_FILE=- < file.txt
```

For commands and options, see the [`fly secrets` docs](/docs/flyctl/secrets/) or run `fly secrets --help`.

## List secrets

List secrets that are set for your app. The list shows only the secret name; the value is not shown as it is a secret.

For example:

```cmd
fly secrets list
```
```output
      NAME     |              DIGEST              |  DATE
+--------------+----------------------------------+---------+
  MY_SECRET    | b9e37b7b239ee4aefc75352fe3fa6dc6 | 17s ago
  DATABASE_URL | cdbe3268a82bfe993921b9cae2a526af | 17s ago
```

For security reasons, we do not allow read access to the plain-text values of secrets.

## Remove secrets

Remove one or more secret values from your app by name.

The following example removes two secrets from the app:

```cmd
fly secrets unset MY_SECRET DATABASE_URL
```
