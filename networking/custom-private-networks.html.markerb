---
title: "Custom private networks"
layout: docs
nav: firecracker
---

If you need to isolate users for security reasons, you can use custom private networks. Every organization gets a default [private network](https://fly.io/docs/networking/private-networking/) (6PN) and all the apps in that 6PN can communicate using `.internal` domains. A custom network is a distinct 6PN within your organization. Apps on separate 6PNs can never communicate unless explicitly configured to do so.

Custom 6PNs are a good solution for tenant isolation within a single organization. If you run an _Anything_-as-a-Service platform on top of Fly.io, then you can create custom 6PNs for secure isolation between customers, for example, a 6PN and app for each customer instance of your service or for each app with a Machine that's running untrusted customer code. When you destroy all the apps on a custom 6PN, then the network is also deleted. (TBD check this?)

Depending on your requirements for billing and app management, separate organizations per customer might be a better option for tenant or client isolation. You can use [unified billing](https://fly.io/docs/about/billing/#unified-billing) to manage billing for multiple organizations, or have each organization billed separately.

## Create a custom private network

<div class="note icon">
You can't add an existing app to a custom 6PN or change an app's 6PN. An app can only exist in one 6PN.
</div>

With the Machines API:

TBD


With flyctl:

```
fly apps create <app name> --network <network name>
```

The `fly apps create` command creates an "empty" app with no Machines. You'll need to manually create Machines for the app using flyctl or the Machines API.

## How apps on different 6PNs can connect

Flycast
Public IPs
fly-replay apparently

## How to connect to Machines on custom 6PNs

fly ssh console
fly ssh sftp
fly proxy
???

## Checking which network an app or Machine is on

tbd some intro text

### Retrieve network names

It's a best practice to use a formula for naming custom 6PNs, especially if you're going to have a lot of them or if you need to add more than one app to each custom 6PN.

Right now the only way to get an apps network name is by listing all the apps in an organization with the Machines API.

`GET /v1/apps?org_slug=<org name>`

**Response:**

```json
{
    "total_apps": 22,
    "apps": [
        {
            "id": "682kqp63x4k9d543",
            "name": "aged-cherry-366",
            "machine_count": 4,
            "network": "default"
        },
        {
            "id": "704e9387kyy13xgn",
            "name": "muddy-violet-667",
            "machine_count": 2,
            "network": "test-network"
        },
...
```

See the [Machines API docs](https://fly.io/docs/machines/api/) for more information about using the API.

### Network ID embedded in private IPv6 addresses

Each 6PN is identified by a network ID, which is a 32-bit identifier that is embedded in the IPv6 address of the 6PN.

You can confirm whether two Machines are on different networks by comparing their private IPv6 addresses. You can get a Machine's 6PN address in one of the following ways:

- run `fly machines list -a my-app-name` 
- run `fly machines status <machine id>`
- from the Machine's `FLY_PRIVATE_IP` environment variable

All Fly.io private IPv6 addresses start with `fdaa`. The 32-bits following `fdaa` identify the 6PN. For example, the following addresses belong to Machines on different 6PNs:

```
Machine 1: fdaa:2:45b:a7b:174:db43:d3c6:2
Machine 2: fdaa:9:d844:a7b:e:33bd:e8b1:2
```

For Machine 1, the network ID is embedded in `:2:45b:` and for Machine 2 the network ID is embedded in `:9:d844:`. We convert the hexadecimal to decimal for the network ID.

Learn about [6PN addresses in detail](/docs/networking/private-networking/#6pn-addresses-in-detail).

