---
title: Scale Machine CPU and RAM
objective: 
layout: docs
nav: firecracker
order: 50
---

[**`fly scale`**](/docs/flyctl/scale) commands apply VM memory and CPU settings to entire process groups in a Fly App. There are two subcommands for scaling these per-VM resources: `fly scale vm` applies a preset CPU/RAM combination; `fly scale memory` adjusts RAM relative to the preset's base RAM.

You can scale an app even if it has crashed. Its VMs are restarted with the new specification.

## Check the VM resources on an app
Here's a simple web app with two Machines running in different regions: two in Toronto and one in Tokyo. All the app's Machines belong to the default process group, `app`, since I didn't explicitly configure any [processes](/docs/apps/processes/). 

```cmd
fly status
```
```out    
App
  Name     = testrun                                        
  Owner    = personal                                   
  Hostname = testrun.fly.dev                                
  Image    = testrun:deployment-01GWZY7ZVJ2HNED4B0KZBPS3AQ  
  Platform = machines                                   

Machines
ID              PROCESS VERSION REGION  STATE   HEALTH CHECKS           LAST UPDATED         
148ed599c14189  app     3       yyz     started 1 total, 1 passing      2023-04-04T19:30:57Z
32874400f35285  app     3       yyz     started 1 total, 1 passing      2023-04-04T19:33:44Z
9080e6e1f94987  app     3       nrt     started 1 total, 1 passing      2023-04-04T19:31:22Z
```

`fly scale show` shows the CPU and RAM settings for all the Machines deployed using `fly deploy` under this app.

```cmd
fly scale show
```
```out
VM Resources for app: testrun

Groups
NAME    COUNT   KIND    CPUS    MEMORY  REGIONS    
app     3       shared  1       256 MB  nrt,yyz(2)
```

These Machines are running at the `shared-cpu-1x` preset scale, with a single shared vCPU and 256MB RAM. 

## Select a preset CPU/RAM combination

There are a number of VM size presets available. See the list of valid named presets with `fly platform vm-sizes`.

Scale to a different preset using `fly scale vm`. In general, you should choose a named VM "size" based on your desired CPU type and scale; RAM can be increased separately.

```cmd
fly scale vm shared-cpu-2x
```
```out
Updating machine 148ed599c14189
  Waiting for 148ed599c14189 to become healthy (started, 1/1)
Machine 148ed599c14189 updated successfully!
Updating machine 32874400f35285
  Waiting for 32874400f35285 to become healthy (started, 1/1)
Machine 32874400f35285 updated successfully!
Updating machine 9080e6e1f94987
  Waiting for 9080e6e1f94987 to become healthy (started, 1/1)
Machine 9080e6e1f94987 updated successfully!
Scaled VM Type to 'shared-cpu-2x'
      CPU Cores: 2
         Memory: 512 MB
```
Check that the `app` process group has had this scale applied:

```cmd
fly scale show   
```
```out         
VM Resources for app: testrun

Groups
NAME    COUNT   KIND    CPUS    MEMORY  REGIONS    
app     3       shared  2       512 MB  nrt,yyz(2)
```

You can also confirm that an individual Machine's config matches this, using `fly machine status`:

```cmd
fly machine status 148ed599c14189
```
```out
Machine ID: 148ed599c14189
Instance ID: 01GX6Q2WE04M85XTHGPYGJK4X6
State: started

VM
  ...                                       
  Process Group = app                                        
  CPU Kind      = shared                                     
  vCPUs         = 2                                          
  Memory        = 512                                        
  ...
```

Looks good!

## Add RAM

If you are happy with the provisioned CPU resources, but want more memory, then use `fly scale memory` to top up the RAM.

If your app crashes with an out-of-memory error, then scale up its RAM. Flyctl restarts the Machines to use the new setting.

```cmd
fly scale memory 4096
```
```out
Updating machine 32874400f35285
  Waiting for 32874400f35285 to become healthy (started, 1/1)
Machine 32874400f35285 updated successfully!
Updating machine 148ed599c14189
  Waiting for 148ed599c14189 to become healthy (started, 1/1)
Machine 148ed599c14189 updated successfully!
Updating machine 9080e6e1f94987
  Waiting for 9080e6e1f94987 to become healthy (started, 1/1)
Machine 9080e6e1f94987 updated successfully!
Scaled VM Type to 'shared-cpu-2x'
      CPU Cores: 2
         Memory: 4096 MB
```

```cmd
fly scale show
```
```out
VM Resources for app: testrun

Groups
NAME    COUNT   KIND    CPUS    MEMORY  REGIONS    
app     3       shared  2       4096 MB nrt,yyz(2)
```


If you try to set an incompatible CPU/RAM combination through `fly scale memory`, flyctl will let you know. There's a list of allowed CPU/RAM combinations and their prices on [our Pricing page](/docs/about/pricing/). 


## Scale by process group

Use the `--process-group` option to specify the process group to scale, with either `fly scale vm` or `fly scale memory`.

<div class="note icon">
**Note**: The `--process-group` option is aliased to `-g` for faster command entry.
</div>

Here's an app with two process groups defined:

```cmd
fly scale show
```
```out
VM Resources for app: mr18-2

Groups
NAME    COUNT   KIND    CPUS    MEMORY  REGIONS 
worker  2       shared  1       512 MB  ams,yyz
web     1       shared  1       512 MB  yyz   
```

Say the workers are constantly crunching data and need to be bigger. You can scale a single process group using the `--process-group` option:

```cmd
fly scale vm performance-2x --process-group worker
```
```out
Updating machine 0e286561f35586
No health checks found
Machine 0e286561f35586 updated successfully!
Updating machine 32873d9b012048
No health checks found
Machine 32873d9b012048 updated successfully!
Scaled VM Type for 'worker' to 'performance-2x'
      CPU Cores: 2
         Memory: 4096 MB
```

Check the result: 

```cmd
fly scale show
```
```out
VM Resources for app: mr18-2

Groups
NAME    COUNT   KIND            CPUS    MEMORY  REGIONS 
worker  2       performance     2       4096 MB ams,yyz
web     1       shared          1       512 MB  yyz 
```

## Machines not belonging to Fly Launch

If an app has Machines not belonging to Fly Launch&mdash;that is, created using `fly machine run` or the Machines API, or `fly machine clone`d from such a Machine&mdash;`fly status` will warn you of their existence.

The app-wide `fly scale` commands do not apply to these Machines, but you can scale any Machine individually with `fly machine update`:

```
fly machine update --vm-size shared-cpu-2x 21781973f03e89
fly machine update --vm-memory 1024 21781973f03e89
fly machine update --vm-cpus 2 21781973f03e89
```

Again, if you try to set an incompatible CPU/RAM combination through `fly machine update --vm-memory` or `fly machine update --vm-cpus`, flyctl will let you know.
