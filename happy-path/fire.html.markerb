---
title: Fire
layout: framework_docs_overview
order: 3
---

This is the point where the rubber meets the road, so this is where you would expect to see where the marketing hype promised by [Speedrun](https://fly.io/speedrun) and
the [Quick Start](../getting-started/launch/) don't quite cut it.  But the fact of the matter is that fly.io is honed for an excellent developer experience (DX) for full stack applications with both realtime time and object storage requirements.

There truly are only two steps involved.

Step 1: [install flyctl](https://fly.io/docs/flyctl/install/)

Step 2: run `fly launch --from https://github.com/fly-apps/node-dictaphone` or `fly launch --from https://github.com/fly-apps/rails-dictaphone`

If you are new to fly, the second step will first take you to a place where you can register.  Then it will provide a description of what you will be getting, and give you an opportunity to tweak the settings (suggestion: don't.  They are fine for this demo and we will walk you through how to adjust them later).  And then it will build and assemble and wire up your application.

Take your time and play with it.  Open your application in multiple browser windows.  Send a link to a friend on another continent and watch your browser update in realtime.

And then relax.  We promised you it would be less than an hour.  You are already up and running.  In fact, if you are so inclined try bringing up this exact same application on another cloud provider.
We don't mind.  In fact we encourage it.  Just please don't count the time you spent there against the hour budget we asked you to allot to this activity.

Once you are back and/or rested up, let's explore.  You've seen the code.  You're up and running.  Now lets take inventory.
Feel free to review the following in any order, or chose to skip ahead:
  * [Your application](../application/)
  * [PostgreSQL](../postgresql/)
  * [Tigris](../tigris/)
  * [Redis](../redis/)

Finally, as an added treat and as promised, let's add some AI functionality, in this case speech recognition using [Whisper](../whisper/).

And when you are done, join us for a [recap](../recap)
