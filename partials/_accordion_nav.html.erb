<%
  def section_open?(section)
    return false unless section.is_a?(Hash)
    current_path = current_page.url
    (!section[:path].nil? && current_page?(section[:path])) ||
      (!section[:open].nil? && section[:open]) ||
      (section[:links] && section[:links].any? do |page|
        if page.is_a?(Hash)
          current_page?(page[:path]) || (page[:links] && page[:links].any? { |subpage| current_page?(subpage[:path]) })
        else
          current_page?(page[:path])
        end
      end)
  end

  def render_accordion_item(item)
    case item
    when Hash
      if item[:links].is_a?(Array) && item[:links].any?
        render 'docs/partials/accordion', nav: item
      elsif item[:title] || item[:text]
        text = item[:title] || item[:text]
        path = item[:path] || '#'
        nav_link(text, path, class: item[:title] ? "title-link" : nil)
      end
    when String, Symbol
      nav_link(item.to_s, "#", class: "title-link")
    else
      Rails.logger.warn "Unexpected item type in accordion: #{item.class}"
      ""
    end
  end
%>

<% if nav.is_a?(Array) %>
  <% nav.each do |item| %>
    <%= render_accordion_item(item) %>
  <% end %>
<% elsif nav.is_a?(Hash) %>
  <%= render_accordion_item(nav) %>
<% else %>
  <% Rails.logger.warn "Unexpected nav type in accordion: #{nav.class}" %>
<% end %>