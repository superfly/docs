---
title: Scale Postgres VMs
objective: Scale Postgres instances up to handle more capacity
layout: framework_docs
order: 50
---

<%= partial "docs/postgres/partials/for-machines" %>

See [Monitoring](/docs/postgres/managing/monitoring/) for how to check the current sizes of the VMs in your Postgres cluster.

**Before scaling a Postgres VM:** Consider the [Postgres configuration parameters](/docs/postgres/managing/configuration-tuning.html) of your cluster, and adjust the resources accordingly. If you're scaling your VMs up, scale before adjusting the Postgres config to match. If you're scaling down, adjust the cluster's Postgres parameters to match the reduced resources before scaling the VM. **In particular, too high a `shared-buffers` value with too little VM RAM can cause a Postgres VM to fail its health checks.**

Scale VM resources for each Machine in the cluster with the [`flyctl machine update`](https://fly.io/docs/flyctl/machine-update/) command. Here's an example of scaling RAM to 1GB on a machine:

```cmd
fly machine update e784079b449483 --memory 1024 --app pg-test
```  

You can use [`fly machine status`](/docs/flyctl/machine-status/) again to confirm the new scale of the Machine.

## HA clusters 

If you have more than one instance in the primary region cluster, scale these VMs identically; they are meant to be interchangeable so the cluster can fail over in case of trouble.

## Postgres resource parameters

When you created your Fly Postgres cluster, certain Postgres configuration parameters were set to sensible values for the resources being provisioned. This means you may want, or need, to change them if you scale your VM resources. Read [Configuration Tuning](/docs/postgres/managing/configuration-tuning.html) before scaling down!
