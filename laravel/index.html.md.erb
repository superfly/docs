---
title: "Run a Laravel App"
layout: framework_docs
order: 1
redirect_from: /docs/getting-started/laravel/
blog_path: /laravel-bytes
---

<% app_name = "fly-hello-laravel" %>
<%= partial "docs/languages-and-frameworks/partials/intro", locals: { runtime: "Laravel", link: "https://laravel.com" } %>

## _Prepare a Laravel app_

Bring your own Laravel app, or create a new one!

If you want to start fresh, here's how to set up a new application. You'll need PHP 8+ and [composer](https://getcomposer.org/) installed locally. You can check your PHP version using `php --version`.

```cmd
composer create-project laravel/laravel fly-laravel
cd fly-laravel
php artisan serve
```

You should be able to visit `http://localhost:8000` and see the home page.


## _Deploy to Fly.io_

### Install Fly

<%= partial "docs/languages-and-frameworks/partials/flyctl" %>

### Launch

Next, we'll use the `launch` command to automagically configure your app for Fly.

The `launch` command adds a few files to your code base. Don't worry, it will ask before overwriting anything.

**If you haven't already, go ahead and run `flyctl launch`!**

```cmd
flyctl launch
```

When asked if you want to deploy now, say **No**.

If you have other environment variables to set, you can edit the `fly.toml` file and add them.

```toml
[env]
# Set any env vars you want here
# Caution: Don't add secrets here
APP_URL = "https://fly-hello-laravel.fly.dev"
```

Replace this with the URL your app will be served on (by default, `"https://<your-app-name>.fly.dev"`).   
 
For sensitive data, you can set **secrets** with the [`flyctl secrets set`](https://fly.io/docs/flyctl/secrets-set/) command:

```cmd
flyctl secrets set SOME_SECRET_KEY=<the-value-from-your-env-file>
```

<div class="callout">
The `flyctl launch` command will generate a secret with a valid, random value for `APP_KEY`.
</div>

### Deploy

Finally, run `flyctl deploy` to build and deploy your application!

You should be able to visit `https://your-app-name.fly.dev` and see the Laravel demo home page.

<%= partial "docs/languages-and-frameworks/partials/launched" %>

### Some Notes

The `flyctl launch` adds some files to your code base.

**Here is what gets added:**

1. `Dockerfile` - Used to build a container image that is run in fly
2. `.dockerignore` - Used to ensure certain files don't make its way into your repository
3. `fly.toml` - Configuration specific to hosting on Fly
4. `docker` - A directory containing configuration files for running Nginx/PHP in a container

Running `flyctl launch` (and later `flyctl deploy`) uses the `Dockerfile` to build a container image, copying your application files into the resulting image.

Fly doesn't care about the state of your git repository - it copies whatever files are present (except for files ignored by `.dockerignore`).
